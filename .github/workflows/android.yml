name: Android APK

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - run: flutter --version
      - run: flutter pub get
      - run: flutter create --platforms=android --overwrite .

      # Restaura google-services.json desde el secreto base64
      - name: Restore google-services.json
        if: ${{ secrets.GOOGLE_SERVICES_JSON_B64 != '' }}
        run: |
          mkdir -p android/app
          printf "%s" "${{ secrets.GOOGLE_SERVICES_JSON_B64 }}" | base64 -d > android/app/google-services.json

      # Alinea applicationId con el package_name del JSON y aplica el plugin de Google Services
      - name: Configure Firebase plugin
        if: ${{ secrets.GOOGLE_SERVICES_JSON_B64 != '' }}
        run: |
          sudo apt-get update && sudo apt-get install -y jq
          PKG=$(jq -r '.client[0].client_info.android_client_info.package_name' android/app/google-services.json)

          if [ -f android/app/build.gradle.kts ]; then
            # agrega plugin en app
            grep -q 'com.google.gms.google-services' android/app/build.gradle.kts || \
              sed -i 's/^plugins {/plugins {\n    id("com.google.gms.google-services")/' android/app/build.gradle.kts
            # ajusta applicationId
            sed -i "s/applicationId = \".*\"/applicationId = \"$PKG\"/" android/app/build.gradle.kts
            # declara plugin en el root si falta
            if [ -f android/build.gradle.kts ] && ! grep -q 'com.google.gms.google-services' android/build.gradle.kts; then
              printf 'plugins {\n    id("com.google.gms.google-services") version "4.4.2" apply false\n}\n\n' | \
                cat - android/build.gradle.kts > android/build.gradle.kts.new && mv android/build.gradle.kts.new android/build.gradle.kts
            fi
          else
            # Groovy
            sed -i "s/applicationId \".*\"/applicationId \"$PKG\"/" android/app/build.gradle
            grep -q 'com.google.gms.google-services' android/app/build.gradle || \
              echo 'apply plugin: "com.google.gms.google-services"' >> android/app/build.gradle
            grep -q 'com.google.gms:google-services' android/build.gradle || \
              sed -i '/dependencies {/a\        classpath "com.google.gms:google-services:4.4.2"' android/build.gradle
          fi

      - run: flutter build apk --debug -v

      - uses: actions/upload-artifact@v4
        with:
          name: android-apks
          path: build/app/outputs/flutter-apk/*.apk
